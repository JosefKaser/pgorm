getby_single_return_method(table,icolumns,index) ::=<<
#region getby_single_return_method
<code_summary({Returns a single object of type [<table.TemplateRelationName>] based on [<index.IndexType> / <index.Indexname>].})>
<icolumns:intelli_param_column(); separator="\r\n">
<intelli_tans()>
<intelli_type_param_table(table)>
<intelli_returns_table(table)>
public static T <create_getby_method_name(icolumns)><generic("T")>(<create_parameters(icolumns)>,NpgsqlTransaction p_Transaction) where T : <table.TemplateRelationName>,new()
{
	T result = DataAccess.ExecuteSingleObjectQuery<generic("T")>(
						string.Format(Helper.SQL_SELECT_WHERE, "*",
									  <table.TemplateRelationName>.RELATION_NAME,"<icolumns:create_sql_asign_parameter(); separator=" AND ">",
							           ""),
						CreateFromReader<generic("T")>,
						p_Transaction,
						<icolumns:create_npgsql_newparameter(); separator=",\r\n">
					);
    if(result != null)
	    result.EntityStatus = EntityStatus.Default;
	return result;
}

<code_summary({Returns a single object of type [<table.TemplateRelationName>] based on [<index.IndexType> / <index.Indexname>]})>
<icolumns:intelli_param_column(); separator="\r\n">
<intelli_type_param_table(table)>
<intelli_returns_table(table)>
public static T <create_getby_method_name(icolumns)><generic("T")>(<create_parameters(icolumns)>) where T : <table.TemplateRelationName>,new()
{
	return <create_getby_method_name(icolumns)><generic("T")>(<create_call_parameters(icolumns)>,null);
}

/************************** non generic *************************/

<code_summary({Returns a single object of type [<table.TemplateRelationName>] based on [<index.IndexType> / <index.Indexname>]})>
<icolumns:intelli_param_column(); separator="\r\n">
<intelli_returns_table(table)>
public static <table.TemplateRelationName> <create_getby_method_name(icolumns)>(<create_parameters(icolumns)>)
{
	return <create_getby_method_name(icolumns)><generic({<table.TemplateRelationName>})>(<create_call_parameters(icolumns)>,null);
}

<code_summary({Returns a single object of type [<table.TemplateRelationName>] based on [<index.IndexType> / <index.Indexname>].})>
<icolumns:intelli_param_column(); separator="\r\n">
<intelli_returns_table(table)>
public static <table.TemplateRelationName> <create_getby_method_name(icolumns)>(<create_parameters(icolumns)>,NpgsqlTransaction p_Transaction)
{
	return <create_getby_method_name(icolumns)><generic({<table.TemplateRelationName>})>(<create_call_parameters(icolumns)>,null);
}

#endregion

>>
