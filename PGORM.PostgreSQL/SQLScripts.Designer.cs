//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3074
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PGORM.PostgreSQL {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SQLScripts {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SQLScripts() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PGORM.PostgreSQL.SQLScripts", typeof(SQLScripts).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select 
        ///	ns.nspname as table_schema,			
        ///	t.relname as table_name,
        ///	c.attname as column_name,
        ///	d.description
        ///from 
        ///	pg_attribute c
        ///	inner join pg_class t on c.attrelid=t.oid
        ///	inner join pg_namespace ns on ns.oid=t.relnamespace
        ///	left join pg_description d on d.objoid=t.oid and d.objsubid=c.attnum
        ///where
        ///	ns.nspname not in (&apos;information_schema&apos;,&apos;pg_catalog&apos;,&apos;pg_toast&apos;) and
        ///	d.description is not null
        ///.
        /// </summary>
        internal static string GetAllColumnComments {
            get {
                return ResourceManager.GetString("GetAllColumnComments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select
        ///	a.*
        ///from
        ///	(
        ///	
        ///    SELECT 
        ///	   CAST(current_database() AS varchar) AS table_catalog,
        ///           CAST(nc.nspname AS varchar) AS table_schema,
        ///           CAST(c.relname AS varchar) AS table_name,
        ///           CAST(a.attname AS varchar) AS column_name,
        ///           CAST(a.attnum AS integer) AS ordinal_position,
        ///           cast(a.attndims as integer) as column_dimation,
        ///           CAST(pg_get_expr(ad.adbin, ad.adrelid) AS varchar) AS column_default,
        ///           CAST(CASE WHEN a.attnotnull OR (t.t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAllColumns {
            get {
                return ResourceManager.GetString("GetAllColumns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///select
        ///		t.constraint_type,c.*
        ///from
        ///		information_schema.constraint_column_usage c
        ///		inner join information_schema.table_constraints t on c.constraint_name = t.constraint_name.
        /// </summary>
        internal static string GetAllEntityColumns {
            get {
                return ResourceManager.GetString("GetAllEntityColumns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select
        ///                p.oid,
        ///		p.proname as function_name,
        ///		n.nspname as schema_name,
        ///		case when (en.typname is not null and en.nspname is not null) then regexp_replace(format_type(p.prorettype,null),en.nspname || &apos;.&apos;,&apos;&apos;) else format_type(p.prorettype,null) end as return_type,
        ///		case when (en.typname is not null and en.nspname is not null) then en.nspname else n.nspname end as return_type_schema,
        ///		p.proargnames as arg_names,
        ///		p.pronargs::integer as num_args,
        ///		p.proretset as returns_set,
        ///		--p [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAllFunctions83 {
            get {
                return ResourceManager.GetString("GetAllFunctions83", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select
        ///		p.oid as proc_oid,
        ///		p.proname,
        ///		regexp_split_to_array(oidvectortypes(p.proargtypes),E&apos;,\\s+&apos;) as arg_types,
        ///		format_type(p.prorettype,null) as return_type,
        ///		y.typtype as return_type_type,
        ///		p.proargnames,
        ///		p.pronargs::integer as num_args,
        ///		p.proretset as returns_set,
        ///		case when r.relkind = &apos;r&apos; and y.typtype=&apos;c&apos; then true else false end as is_table,
        ///		case when r.relkind = &apos;v&apos; and y.typtype=&apos;c&apos; then true else false end as is_view,
        ///		case when r.relkind = &apos;c&apos; and y.typtype=&apos;c&apos; then  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAllFunctions84 {
            get {
                return ResourceManager.GetString("GetAllFunctions84", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select * from
        ///(
        ///select 
        ///	ire.relname as constraint_name,
        ///	ns.nspname as table_namespace,
        ///	re.relname as table_name,
        ///	string_to_array(i.indkey::varchar,&apos; &apos;)::integer[] as constraint_keys,
        ///	case when i.indisunique then &apos;u&apos;::varchar else &apos;i&apos;::varchar end as constraint_type,
        ///	null::varchar as foreign_table_namespace,
        ///	null::varchar as foreign_table_name
        ///from 
        ///	pg_index i
        ///	inner join pg_class re on re.oid=i.indrelid
        ///	inner join pg_class ire on ire.oid=i.indexrelid
        ///	inner join pg_namespace ns on re. [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAllIndexes {
            get {
                return ResourceManager.GetString("GetAllIndexes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select
        ///	c.relname as sequence_name,
        ///	r.relname as table_name,
        ///	ns.nspname as table_schema,
        ///	a.attname as column_name
        ///from
        ///	pg_depend dp
        ///	inner join pg_class c on dp.objid=c.oid
        ///	inner join pg_class r on dp.refobjid=r.oid
        ///	inner join pg_attribute a on dp.refobjsubid=a.attnum and a.attrelid=r.oid
        ///	inner join pg_namespace ns on r.relnamespace=ns.oid
        ///where
        ///	c.relkind=&apos;S&apos;
        ///.
        /// </summary>
        internal static string GetAllSerials {
            get {
                return ResourceManager.GetString("GetAllSerials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select
        ///	*
        ///from
        ///(	
        ///    SELECT CAST(current_database() AS varchar) AS table_catalog,
        ///           CAST(nc.nspname AS varchar) AS table_schema,
        ///           CAST(c.relname AS varchar) AS table_name,
        ///
        ///           CAST(
        ///             CASE WHEN nc.oid = pg_my_temp_schema() THEN &apos;LOCAL TEMPORARY&apos;
        ///                  WHEN c.relkind = &apos;r&apos; THEN &apos;BASE TABLE&apos;
        ///                  WHEN c.relkind = &apos;v&apos; THEN &apos;VIEW&apos;
        ///                  WHEN c.relkind = &apos;c&apos; THEN &apos;USER-DEFINED&apos;
        ///                  ELSE null END
        ///             A [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAllTablesViews {
            get {
                return ResourceManager.GetString("GetAllTablesViews", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select
        ///	ns.nspname as type_namespace,
        ///	t.oid as type_oid, 
        ///	t.typname as type_short_name,
        ///	format_type(t.oid,null) as type_long_name,
        ///	(case when c.relkind is null then t.typtype else c.relkind end)::varchar as type_type,
        ///	t.typdelim::varchar as delimiter,
        ///	format_type(t.typelem,null) as base_type,
        ///	t.typelem as base_type_oid,
        ///	case when btns.nspname is null then &apos;&apos;::name else btns.nspname end as base_type_schema
        ///from
        ///	pg_type t
        ///	left join pg_class c on t.oid=c.reltype
        ///	inner join pg_namespace  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAllTypes {
            get {
                return ResourceManager.GetString("GetAllTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select table_namespace,table_name,constraint_keys from
        ///(
        ///select 
        ///	ns.nspname as table_namespace,
        ///	re.relname as table_name,
        ///	string_to_array(i.indkey::varchar,&apos; &apos;)::integer[] as constraint_keys,
        ///	&apos;i&apos; as constraint_type,
        ///	null::varchar as foreign_table_namespace,
        ///	null::varchar as foreign_table_name
        ///from 
        ///	pg_index i
        ///	inner join pg_class re on re.oid=i.indrelid
        ///	inner join pg_class ire on ire.oid=i.indexrelid
        ///	inner join pg_namespace ns on re.relnamespace=ns.oid
        ///where 
        ///	i.indisprimary=false
        ///	 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetDistinctIndex {
            get {
                return ResourceManager.GetString("GetDistinctIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select
        ///	distinct 
        ///	view_schema,
        ///	view_name,
        ///	table_schema,
        ///	table_name
        ///from
        ///	information_schema.view_column_usage
        ///where
        ///	view_schema not in (&apos;information_schema&apos;,&apos;pg_catalog&apos;);.
        /// </summary>
        internal static string GetViewTableDepends {
            get {
                return ResourceManager.GetString("GetViewTableDepends", resourceCulture);
            }
        }
    }
}
